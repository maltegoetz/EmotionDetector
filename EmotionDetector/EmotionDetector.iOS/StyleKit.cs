//
//  StyleKit.cs
//  EmotionDetector
//
//  Created by Rafael Regh on 16/11/15.
//  Copyright (c) 2015 CompanyName. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



using System;
using System.Drawing;
using Foundation;
using UIKit;
using CoreGraphics;

namespace EmotionDetector
{
    [Register ("StyleKit")]
    public class StyleKit : NSObject
    {

        //// Initialization

        static StyleKit()
        {
        }

        //// Drawing Methods

        public static void DrawFaceRect(CGRect frame)
        {
        }

        public static void DrawCanvas1()
        {
            //// General Declarations
            var context = UIGraphics.GetCurrentContext();

            //// Symbol Drawing
            CGRect symbolRect = new CGRect(4.0f, 434.0f, 407.0f, 302.0f);
            context.SaveState();
            context.ClipToRect(symbolRect);
            context.TranslateCTM(symbolRect.X, symbolRect.Y);

            StyleKit.DrawEmotionStatView(new CGRect(0.0f, 0.0f, symbolRect.Width, symbolRect.Height), 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 273.0f);
            context.RestoreState();
        }

        public static void DrawEmotionStatView(CGRect frame, float angerPercentage, float contemptPercentage, float disgustPercentage, float fearPercentage, float happinessPercentage, float neutralPercentage, float sadnessPercentage, float surprisePercentage, float height)
        {
            //// General Declarations
            var colorSpace = CGColorSpace.CreateDeviceRGB();
            var context = UIGraphics.GetCurrentContext();

            //// Color Declarations
            var anger1 = UIColor.FromRGBA(1.000f, 0.369f, 0.227f, 1.000f);
            var anger2 = UIColor.FromRGBA(1.000f, 0.165f, 0.408f, 1.000f);
            var neutral1 = UIColor.FromRGBA(0.859f, 0.867f, 0.871f, 1.000f);
            var neutral2 = UIColor.FromRGBA(0.537f, 0.549f, 0.565f, 1.000f);
            var happy1 = UIColor.FromRGBA(1.000f, 0.859f, 0.298f, 1.000f);
            var happy2 = UIColor.FromRGBA(1.000f, 0.804f, 0.008f, 1.000f);
            var surprise1 = UIColor.FromRGBA(0.102f, 0.839f, 0.992f, 1.000f);
            var surprise2 = UIColor.FromRGBA(0.114f, 0.384f, 0.941f, 1.000f);
            var sadness1 = UIColor.FromRGBA(0.290f, 0.290f, 0.290f, 1.000f);
            var sadness2 = UIColor.FromRGBA(0.169f, 0.169f, 0.169f, 1.000f);
            var disgust1 = UIColor.FromRGBA(0.529f, 0.988f, 0.439f, 1.000f);
            var disgust2 = UIColor.FromRGBA(0.043f, 0.827f, 0.094f, 1.000f);
            var fear1 = UIColor.FromRGBA(0.776f, 0.267f, 0.988f, 1.000f);
            var fear2 = UIColor.FromRGBA(0.345f, 0.337f, 0.839f, 1.000f);
            var contempt1 = UIColor.FromRGBA(1.000f, 0.584f, 0.000f, 1.000f);
            var contempt2 = UIColor.FromRGBA(0.721f, 0.421f, 0.000f, 1.000f);

            //// Gradient Declarations
            var angerGradientColors = new CGColor [] {anger1.CGColor, anger2.CGColor};
            var angerGradientLocations = new nfloat [] {0.0f, 1.0f};
            var angerGradient = new CGGradient(colorSpace, angerGradientColors, angerGradientLocations);
            var neutralGradientColors = new CGColor [] {neutral1.CGColor, neutral2.CGColor};
            var neutralGradientLocations = new nfloat [] {0.0f, 1.0f};
            var neutralGradient = new CGGradient(colorSpace, neutralGradientColors, neutralGradientLocations);
            var happyGradientColors = new CGColor [] {happy1.CGColor, happy2.CGColor};
            var happyGradientLocations = new nfloat [] {0.0f, 1.0f};
            var happyGradient = new CGGradient(colorSpace, happyGradientColors, happyGradientLocations);
            var surpriseGradientColors = new CGColor [] {surprise1.CGColor, surprise2.CGColor};
            var surpriseGradientLocations = new nfloat [] {0.0f, 1.0f};
            var surpriseGradient = new CGGradient(colorSpace, surpriseGradientColors, surpriseGradientLocations);
            var sadnessGradientColors = new CGColor [] {sadness1.CGColor, sadness2.CGColor};
            var sadnessGradientLocations = new nfloat [] {0.0f, 1.0f};
            var sadnessGradient = new CGGradient(colorSpace, sadnessGradientColors, sadnessGradientLocations);
            var disgustGradientColors = new CGColor [] {disgust1.CGColor, disgust2.CGColor};
            var disgustGradientLocations = new nfloat [] {0.0f, 1.0f};
            var disgustGradient = new CGGradient(colorSpace, disgustGradientColors, disgustGradientLocations);
            var fearGradientColors = new CGColor [] {fear1.CGColor, fear2.CGColor};
            var fearGradientLocations = new nfloat [] {0.0f, 1.0f};
            var fearGradient = new CGGradient(colorSpace, fearGradientColors, fearGradientLocations);
            var contemptGradientColors = new CGColor [] {contempt1.CGColor, contempt2.CGColor};
            var contemptGradientLocations = new nfloat [] {0.0f, 1.0f};
            var contemptGradient = new CGGradient(colorSpace, contemptGradientColors, contemptGradientLocations);

            //// Variable Declarations
            var angerY = height - height / 100.0f * angerPercentage - 25.0f + angerPercentage * 0.25f;
            var contemptY = height - height / 100.0f * contemptPercentage - 25.0f + contemptPercentage * 0.25f;
            var disgustY = height - height / 100.0f * disgustPercentage - 25.0f + disgustPercentage * 0.25f;
            var fearY = height - height / 100.0f * fearPercentage - 25.0f + fearPercentage * 0.25f;
            var happinessY = height - height / 100.0f * happinessPercentage - 25.0f + happinessPercentage * 0.25f;
            var neutralY = height - height / 100.0f * neutralPercentage - 25.0f + neutralPercentage * 0.25f;
            var sadnessY = height - height / 100.0f * sadnessPercentage - 25.0f + sadnessPercentage * 0.25f;
            var surpriseY = height - height / 100.0f * surprisePercentage - 25.0f + surprisePercentage * 0.25f;

            //// Bezier Drawing
            context.SaveState();
            context.TranslateCTM(0.0f, angerY);

            UIBezierPath bezierPath = new UIBezierPath();
            bezierPath.MoveTo(new CGPoint(50.0f, 28.5f));
            bezierPath.AddCurveToPoint(new CGPoint(49.97f, 30.0f), new CGPoint(50.0f, 29.0f), new CGPoint(49.99f, 29.5f));
            bezierPath.AddCurveToPoint(new CGPoint(50.0f, 301.75f), new CGPoint(50.0f, 30.0f), new CGPoint(50.0f, 301.75f));
            bezierPath.AddLineTo(new CGPoint(0.22f, 301.75f));
            bezierPath.AddCurveToPoint(new CGPoint(0.22f, 32.29f), new CGPoint(0.22f, 301.75f), new CGPoint(0.22f, 58.53f));
            bezierPath.AddCurveToPoint(new CGPoint(0.0f, 28.5f), new CGPoint(0.07f, 31.05f), new CGPoint(-0.0f, 29.78f));
            bezierPath.AddCurveToPoint(new CGPoint(9.9f, 5.79f), new CGPoint(0.0f, 19.23f), new CGPoint(3.88f, 10.99f));
            bezierPath.AddCurveToPoint(new CGPoint(25.0f, 0.0f), new CGPoint(14.09f, 2.16f), new CGPoint(19.33f, -0.0f));
            bezierPath.AddCurveToPoint(new CGPoint(50.0f, 28.5f), new CGPoint(38.81f, 0.0f), new CGPoint(50.0f, 12.76f));
            bezierPath.ClosePath();
            context.SaveState();
            bezierPath.AddClip();
            CGRect bezierBounds = bezierPath.CGPath.PathBoundingBox;
            context.DrawLinearGradient(angerGradient,
                new CGPoint(bezierBounds.GetMidX(), bezierBounds.GetMinY()),
                new CGPoint(bezierBounds.GetMidX(), bezierBounds.GetMaxY()),
                0);
            context.RestoreState();

            context.RestoreState();


            //// Bezier 2 Drawing
            context.SaveState();
            context.TranslateCTM(51.0f, sadnessY);

            UIBezierPath bezier2Path = new UIBezierPath();
            bezier2Path.MoveTo(new CGPoint(50.0f, 28.5f));
            bezier2Path.AddCurveToPoint(new CGPoint(49.97f, 30.0f), new CGPoint(50.0f, 29.0f), new CGPoint(49.99f, 29.5f));
            bezier2Path.AddCurveToPoint(new CGPoint(50.0f, 301.75f), new CGPoint(50.0f, 30.0f), new CGPoint(50.0f, 301.75f));
            bezier2Path.AddLineTo(new CGPoint(0.22f, 301.75f));
            bezier2Path.AddCurveToPoint(new CGPoint(0.22f, 32.29f), new CGPoint(0.22f, 301.75f), new CGPoint(0.22f, 58.53f));
            bezier2Path.AddCurveToPoint(new CGPoint(0.0f, 28.5f), new CGPoint(0.07f, 31.05f), new CGPoint(-0.0f, 29.78f));
            bezier2Path.AddCurveToPoint(new CGPoint(9.9f, 5.79f), new CGPoint(0.0f, 19.23f), new CGPoint(3.88f, 10.99f));
            bezier2Path.AddCurveToPoint(new CGPoint(25.0f, 0.0f), new CGPoint(14.09f, 2.16f), new CGPoint(19.33f, -0.0f));
            bezier2Path.AddCurveToPoint(new CGPoint(50.0f, 28.5f), new CGPoint(38.81f, 0.0f), new CGPoint(50.0f, 12.76f));
            bezier2Path.ClosePath();
            context.SaveState();
            bezier2Path.AddClip();
            CGRect bezier2Bounds = bezier2Path.CGPath.PathBoundingBox;
            context.DrawLinearGradient(sadnessGradient,
                new CGPoint(bezier2Bounds.GetMidX(), bezier2Bounds.GetMinY()),
                new CGPoint(bezier2Bounds.GetMidX(), bezier2Bounds.GetMaxY()),
                0);
            context.RestoreState();

            context.RestoreState();


            //// Bezier 3 Drawing
            context.SaveState();
            context.TranslateCTM(102.0f, disgustY);

            UIBezierPath bezier3Path = new UIBezierPath();
            bezier3Path.MoveTo(new CGPoint(50.0f, 28.5f));
            bezier3Path.AddCurveToPoint(new CGPoint(49.97f, 30.0f), new CGPoint(50.0f, 29.0f), new CGPoint(49.99f, 29.5f));
            bezier3Path.AddCurveToPoint(new CGPoint(50.0f, 301.75f), new CGPoint(50.0f, 30.0f), new CGPoint(50.0f, 301.75f));
            bezier3Path.AddLineTo(new CGPoint(0.22f, 301.75f));
            bezier3Path.AddCurveToPoint(new CGPoint(0.22f, 32.29f), new CGPoint(0.22f, 301.75f), new CGPoint(0.22f, 58.53f));
            bezier3Path.AddCurveToPoint(new CGPoint(0.0f, 28.5f), new CGPoint(0.07f, 31.05f), new CGPoint(-0.0f, 29.78f));
            bezier3Path.AddCurveToPoint(new CGPoint(9.9f, 5.79f), new CGPoint(0.0f, 19.23f), new CGPoint(3.88f, 10.99f));
            bezier3Path.AddCurveToPoint(new CGPoint(25.0f, 0.0f), new CGPoint(14.09f, 2.16f), new CGPoint(19.33f, -0.0f));
            bezier3Path.AddCurveToPoint(new CGPoint(50.0f, 28.5f), new CGPoint(38.81f, 0.0f), new CGPoint(50.0f, 12.76f));
            bezier3Path.ClosePath();
            context.SaveState();
            bezier3Path.AddClip();
            CGRect bezier3Bounds = bezier3Path.CGPath.PathBoundingBox;
            context.DrawLinearGradient(disgustGradient,
                new CGPoint(bezier3Bounds.GetMidX(), bezier3Bounds.GetMinY()),
                new CGPoint(bezier3Bounds.GetMidX(), bezier3Bounds.GetMaxY()),
                0);
            context.RestoreState();

            context.RestoreState();


            //// Bezier 4 Drawing
            context.SaveState();
            context.TranslateCTM(153.0f, fearY);

            UIBezierPath bezier4Path = new UIBezierPath();
            bezier4Path.MoveTo(new CGPoint(50.0f, 28.5f));
            bezier4Path.AddCurveToPoint(new CGPoint(49.97f, 30.0f), new CGPoint(50.0f, 29.0f), new CGPoint(49.99f, 29.5f));
            bezier4Path.AddCurveToPoint(new CGPoint(50.0f, 301.75f), new CGPoint(50.0f, 30.0f), new CGPoint(50.0f, 301.75f));
            bezier4Path.AddLineTo(new CGPoint(0.22f, 301.75f));
            bezier4Path.AddCurveToPoint(new CGPoint(0.22f, 32.29f), new CGPoint(0.22f, 301.75f), new CGPoint(0.22f, 58.53f));
            bezier4Path.AddCurveToPoint(new CGPoint(0.0f, 28.5f), new CGPoint(0.07f, 31.05f), new CGPoint(-0.0f, 29.78f));
            bezier4Path.AddCurveToPoint(new CGPoint(9.9f, 5.79f), new CGPoint(0.0f, 19.23f), new CGPoint(3.88f, 10.99f));
            bezier4Path.AddCurveToPoint(new CGPoint(25.0f, 0.0f), new CGPoint(14.09f, 2.16f), new CGPoint(19.33f, -0.0f));
            bezier4Path.AddCurveToPoint(new CGPoint(50.0f, 28.5f), new CGPoint(38.81f, 0.0f), new CGPoint(50.0f, 12.76f));
            bezier4Path.ClosePath();
            context.SaveState();
            bezier4Path.AddClip();
            CGRect bezier4Bounds = bezier4Path.CGPath.PathBoundingBox;
            context.DrawLinearGradient(fearGradient,
                new CGPoint(bezier4Bounds.GetMidX(), bezier4Bounds.GetMinY()),
                new CGPoint(bezier4Bounds.GetMidX(), bezier4Bounds.GetMaxY()),
                0);
            context.RestoreState();

            context.RestoreState();


            //// Bezier 5 Drawing
            context.SaveState();
            context.TranslateCTM(204.0f, happinessY);

            UIBezierPath bezier5Path = new UIBezierPath();
            bezier5Path.MoveTo(new CGPoint(50.0f, 28.5f));
            bezier5Path.AddCurveToPoint(new CGPoint(49.97f, 30.0f), new CGPoint(50.0f, 29.0f), new CGPoint(49.99f, 29.5f));
            bezier5Path.AddCurveToPoint(new CGPoint(50.0f, 301.75f), new CGPoint(50.0f, 30.0f), new CGPoint(50.0f, 301.75f));
            bezier5Path.AddLineTo(new CGPoint(0.22f, 301.75f));
            bezier5Path.AddCurveToPoint(new CGPoint(0.22f, 32.29f), new CGPoint(0.22f, 301.75f), new CGPoint(0.22f, 58.53f));
            bezier5Path.AddCurveToPoint(new CGPoint(0.0f, 28.5f), new CGPoint(0.07f, 31.05f), new CGPoint(-0.0f, 29.78f));
            bezier5Path.AddCurveToPoint(new CGPoint(9.9f, 5.79f), new CGPoint(0.0f, 19.23f), new CGPoint(3.88f, 10.99f));
            bezier5Path.AddCurveToPoint(new CGPoint(25.0f, 0.0f), new CGPoint(14.09f, 2.16f), new CGPoint(19.33f, -0.0f));
            bezier5Path.AddCurveToPoint(new CGPoint(50.0f, 28.5f), new CGPoint(38.81f, 0.0f), new CGPoint(50.0f, 12.76f));
            bezier5Path.ClosePath();
            context.SaveState();
            bezier5Path.AddClip();
            CGRect bezier5Bounds = bezier5Path.CGPath.PathBoundingBox;
            context.DrawLinearGradient(happyGradient,
                new CGPoint(bezier5Bounds.GetMidX(), bezier5Bounds.GetMinY()),
                new CGPoint(bezier5Bounds.GetMidX(), bezier5Bounds.GetMaxY()),
                0);
            context.RestoreState();

            context.RestoreState();


            //// Bezier 6 Drawing
            context.SaveState();
            context.TranslateCTM(255.0f, neutralY);

            UIBezierPath bezier6Path = new UIBezierPath();
            bezier6Path.MoveTo(new CGPoint(50.0f, 28.5f));
            bezier6Path.AddCurveToPoint(new CGPoint(49.97f, 30.0f), new CGPoint(50.0f, 29.0f), new CGPoint(49.99f, 29.5f));
            bezier6Path.AddCurveToPoint(new CGPoint(50.0f, 301.75f), new CGPoint(50.0f, 30.0f), new CGPoint(50.0f, 301.75f));
            bezier6Path.AddLineTo(new CGPoint(0.22f, 301.75f));
            bezier6Path.AddCurveToPoint(new CGPoint(0.22f, 32.29f), new CGPoint(0.22f, 301.75f), new CGPoint(0.22f, 58.53f));
            bezier6Path.AddCurveToPoint(new CGPoint(0.0f, 28.5f), new CGPoint(0.07f, 31.05f), new CGPoint(-0.0f, 29.78f));
            bezier6Path.AddCurveToPoint(new CGPoint(9.9f, 5.79f), new CGPoint(0.0f, 19.23f), new CGPoint(3.88f, 10.99f));
            bezier6Path.AddCurveToPoint(new CGPoint(25.0f, 0.0f), new CGPoint(14.09f, 2.16f), new CGPoint(19.33f, -0.0f));
            bezier6Path.AddCurveToPoint(new CGPoint(50.0f, 28.5f), new CGPoint(38.81f, 0.0f), new CGPoint(50.0f, 12.76f));
            bezier6Path.ClosePath();
            context.SaveState();
            bezier6Path.AddClip();
            CGRect bezier6Bounds = bezier6Path.CGPath.PathBoundingBox;
            context.DrawLinearGradient(neutralGradient,
                new CGPoint(bezier6Bounds.GetMidX(), bezier6Bounds.GetMinY()),
                new CGPoint(bezier6Bounds.GetMidX(), bezier6Bounds.GetMaxY()),
                0);
            context.RestoreState();

            context.RestoreState();


            //// Bezier 7 Drawing
            context.SaveState();
            context.TranslateCTM(306.0f, surpriseY);

            UIBezierPath bezier7Path = new UIBezierPath();
            bezier7Path.MoveTo(new CGPoint(50.0f, 28.5f));
            bezier7Path.AddCurveToPoint(new CGPoint(49.97f, 30.0f), new CGPoint(50.0f, 29.0f), new CGPoint(49.99f, 29.5f));
            bezier7Path.AddCurveToPoint(new CGPoint(50.0f, 301.75f), new CGPoint(50.0f, 30.0f), new CGPoint(50.0f, 301.75f));
            bezier7Path.AddLineTo(new CGPoint(0.22f, 301.75f));
            bezier7Path.AddCurveToPoint(new CGPoint(0.22f, 32.29f), new CGPoint(0.22f, 301.75f), new CGPoint(0.22f, 58.53f));
            bezier7Path.AddCurveToPoint(new CGPoint(0.0f, 28.5f), new CGPoint(0.07f, 31.05f), new CGPoint(-0.0f, 29.78f));
            bezier7Path.AddCurveToPoint(new CGPoint(9.9f, 5.79f), new CGPoint(0.0f, 19.23f), new CGPoint(3.88f, 10.99f));
            bezier7Path.AddCurveToPoint(new CGPoint(25.0f, 0.0f), new CGPoint(14.09f, 2.16f), new CGPoint(19.33f, -0.0f));
            bezier7Path.AddCurveToPoint(new CGPoint(50.0f, 28.5f), new CGPoint(38.81f, 0.0f), new CGPoint(50.0f, 12.76f));
            bezier7Path.ClosePath();
            context.SaveState();
            bezier7Path.AddClip();
            CGRect bezier7Bounds = bezier7Path.CGPath.PathBoundingBox;
            context.DrawLinearGradient(surpriseGradient,
                new CGPoint(bezier7Bounds.GetMidX(), bezier7Bounds.GetMinY()),
                new CGPoint(bezier7Bounds.GetMidX(), bezier7Bounds.GetMaxY()),
                0);
            context.RestoreState();

            context.RestoreState();


            //// Bezier 8 Drawing
            context.SaveState();
            context.TranslateCTM(357.0f, contemptY);

            UIBezierPath bezier8Path = new UIBezierPath();
            bezier8Path.MoveTo(new CGPoint(50.0f, 28.5f));
            bezier8Path.AddCurveToPoint(new CGPoint(49.97f, 30.0f), new CGPoint(50.0f, 29.0f), new CGPoint(49.99f, 29.5f));
            bezier8Path.AddCurveToPoint(new CGPoint(50.0f, 301.75f), new CGPoint(50.0f, 30.0f), new CGPoint(50.0f, 301.75f));
            bezier8Path.AddLineTo(new CGPoint(0.22f, 301.75f));
            bezier8Path.AddCurveToPoint(new CGPoint(0.22f, 32.29f), new CGPoint(0.22f, 301.75f), new CGPoint(0.22f, 58.53f));
            bezier8Path.AddCurveToPoint(new CGPoint(0.0f, 28.5f), new CGPoint(0.07f, 31.05f), new CGPoint(-0.0f, 29.78f));
            bezier8Path.AddCurveToPoint(new CGPoint(9.9f, 5.79f), new CGPoint(0.0f, 19.23f), new CGPoint(3.88f, 10.99f));
            bezier8Path.AddCurveToPoint(new CGPoint(25.0f, 0.0f), new CGPoint(14.09f, 2.16f), new CGPoint(19.33f, -0.0f));
            bezier8Path.AddCurveToPoint(new CGPoint(50.0f, 28.5f), new CGPoint(38.81f, 0.0f), new CGPoint(50.0f, 12.76f));
            bezier8Path.ClosePath();
            context.SaveState();
            bezier8Path.AddClip();
            CGRect bezier8Bounds = bezier8Path.CGPath.PathBoundingBox;
            context.DrawLinearGradient(contemptGradient,
                new CGPoint(bezier8Bounds.GetMidX(), bezier8Bounds.GetMinY()),
                new CGPoint(bezier8Bounds.GetMidX(), bezier8Bounds.GetMaxY()),
                0);
            context.RestoreState();

            context.RestoreState();
        }

    }
}
